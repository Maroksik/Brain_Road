import 'package:shared_preferences/shared_preferences.dart';

/// –°–µ—Ä–≤—ñ—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
class UserPreferences {
  static const String _isFirstLaunchKey = 'is_first_launch';
  static const String _userNameKey = 'user_name';
  static const String _userAvatarKey = 'user_avatar';
  static const String _userAgeKey = 'user_age';
  static const String _registrationCompletedKey = 'registration_completed';

  static SharedPreferences? _preferences;

  /// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è SharedPreferences
  static Future<void> init() async {
    _preferences ??= await SharedPreferences.getInstance();
  }

  /// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ –ø–µ—Ä—à–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
  static bool get isFirstLaunch {
    return _preferences?.getBool(_isFirstLaunchKey) ?? true;
  }

  /// –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —â–æ –ø—Ä–æ–≥—Ä–∞–º–∞ –±—É–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞
  static Future<void> setFirstLaunchCompleted() async {
    await _preferences?.setBool(_isFirstLaunchKey, false);
  }

  /// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
  static bool get isRegistrationCompleted {
    return _preferences?.getBool(_registrationCompletedKey) ?? false;
  }

  /// –ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
  static Future<void> saveUserData({
    required String name,
    required String avatar,
    required String age,
  }) async {
    await Future.wait([
      _preferences?.setString(_userNameKey, name) ?? Future.value(),
      _preferences?.setString(_userAvatarKey, avatar) ?? Future.value(),
      _preferences?.setString(_userAgeKey, age) ?? Future.value(),
      _preferences?.setBool(_registrationCompletedKey, true) ?? Future.value(),
    ]);
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  static String get userName {
    return _preferences?.getString(_userNameKey) ?? '';
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  static String get userAvatar {
    return _preferences?.getString(_userAvatarKey) ?? 'üêî';
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  static String get userAge {
    return _preferences?.getString(_userAgeKey) ?? '';
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –ª–µ–π–±–ª –≤—ñ–∫–æ–≤–æ–≥–æ –¥—ñ–∞–ø–∞–∑–æ–Ω—É
  static String get userAgeLabel {
    final age = userAge;
    switch (age) {
      case '5-7':
        return '5-7 years';
      case '8-10':
        return '8-10 years';
      case '11-13':
        return '11-13 years';
      default:
        return 'Unknown';
    }
  }

  /// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤—Å—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ
  static bool get hasUserData {
    return userName.isNotEmpty && 
           userAvatar.isNotEmpty && 
           userAge.isNotEmpty &&
           isRegistrationCompleted;
  }

  /// –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–±–æ —Å–∫–∏–¥–∞–Ω–Ω—è)
  static Future<void> clearUserData() async {
    await Future.wait([
      _preferences?.remove(_userNameKey) ?? Future.value(),
      _preferences?.remove(_userAvatarKey) ?? Future.value(),
      _preferences?.remove(_userAgeKey) ?? Future.value(),
      _preferences?.remove(_registrationCompletedKey) ?? Future.value(),
      _preferences?.setBool(_isFirstLaunchKey, true) ?? Future.value(),
    ]);
  }

  /// –û–Ω–æ–≤–∏—Ç–∏ –æ–∫—Ä–µ–º—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  static Future<void> updateUserName(String name) async {
    await _preferences?.setString(_userNameKey, name);
  }

  static Future<void> updateUserAvatar(String avatar) async {
    await _preferences?.setString(_userAvatarKey, avatar);
  }

  static Future<void> updateUserAge(String age) async {
    await _preferences?.setString(_userAgeKey, age);
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —è–∫ Map
  static Map<String, String> get userData {
    return {
      'name': userName,
      'avatar': userAvatar,
      'age': userAge,
      'ageLabel': userAgeLabel,
    };
  }

  /// Debugging –º–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤—Å—ñ—Ö –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
  static Map<String, dynamic> get allStoredData {
    return {
      'isFirstLaunch': isFirstLaunch,
      'isRegistrationCompleted': isRegistrationCompleted,
      'userName': userName,
      'userAvatar': userAvatar,
      'userAge': userAge,
      'hasUserData': hasUserData,
    };
  }
}